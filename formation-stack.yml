---
AWSTemplateFormatVersion: "2010-09-09"
Description: "LDAP Server"
Parameters:
  InstanceTypeParameter: 
    Type: String
    Default: t2.medium
    AllowedValues: 
      - t2.small
      - t2.medium
      - t3.medium
      - t2.large
  VpcId:
    Type: String
    Default: vpc-0000000
    Description: VPC ID.
  AMI:
    Type: AWS::EC2::Image::Id
    Default: ami-0000000
    Description: AMI for EC2.
  InstanceKeypair:
    Type: AWS::EC2::KeyPair::KeyName
    Default: my-key
    Description: EC2 keypair to associate with instance.
  Subnet:
    Type: AWS::EC2::Subnet::Id
    Default: "subnet-00000001"
    Description: The subnet to deploy the Ec2.
  ConfigBucket:
    Type: String
    Default: config-bucket
    Description: The S3 bucket which contains the configuration.
  AllowedIPRange:
    Type: String
    Default: 10.0.0.0/24
    Description: The IPv4 address range to allow LDAP connections from.
  SnsArn:
    Type: String
    Default: arn:aws:sns:XXX:XXX:XXX
    Description: A SNS topic to send alerts to.

Resources:
  #
  # Security section
  #
  Ec2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      Policies:
        - PolicyName: "readConfigBucket"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: 
                  - "s3:ListBucket"
                  - "s3:GetObject"
                Resource: 
                  - !Join [ "", [ "arn:aws:s3:::", Ref: ConfigBucket ] ]
                  - !Join [ "", [ "arn:aws:s3:::", Ref: ConfigBucket, "/*" ] ]

  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This is the security group for the service
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - 
         IpProtocol: "tcp"
         FromPort: "22"
         ToPort: "22"
         CidrIp: !Ref AllowedIPRange
        - 
         IpProtocol: "tcp"
         FromPort: "389"
         ToPort: "389"
         CidrIp: !Ref AllowedIPRange
        - 
         IpProtocol: "tcp"
         FromPort: "636"
         ToPort: "636"
         CidrIp: !Ref AllowedIPRange
      Tags:
        -
         Key: Name
         Value: !Ref AWS::StackName

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn:
     - Ec2Role
    Properties: 
      Path: "/"
      Roles: 
        - !Ref Ec2Role

  #
  # Compute Section
  #
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
     - InstanceProfile
     - Ec2SecurityGroup
    Properties:
      ImageId: !Ref AMI
      SecurityGroupIds: 
       - !GetAtt Ec2SecurityGroup.GroupId
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref InstanceKeypair
      IamInstanceProfile: !Ref InstanceProfile
      SubnetId: !Ref Subnet
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdb"
          Ebs: 
            VolumeSize: "16"
            VolumeType: "gp2"
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            echo "SECTION: Set metadata variables:"
            PRIVATE_IP=$(curl -fsq http://169.254.169.254/latest/meta-data/local-ipv4)
            INSTANCE_ID=$(curl -fsq http://169.254.169.254/latest/meta-data/instance-id)
            CONFIG_BUCKET='${ConfigBucket}'
            STACK_NAME='${AWS::StackName}'
            TMP_INSTALL_DIR='/etc/setup-files'
            yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y

            echo "SECTION: Install base packages:"
            yum update -y
            yum install jq -y
            yum install python-pip -y
            pip install ansible
            
            echo "SECTION: Configure AWS CLI:"
            REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq .region -r)
            aws configure set default.region $REGION
            
            echo "SECTION: Sync config bucket:"
            mkdir $TMP_INSTALL_DIR
            aws s3 cp s3://$CONFIG_BUCKET/ $TMP_INSTALL_DIR --recursive

            echo "SECTION: Run Ansible playbook:"
            echo "127.0.0.1 ldap" >> /etc/hosts
            ansible-playbook $TMP_INSTALL_DIR/389-ds.yml -e "@"$TMP_INSTALL_DIR"/vars/"$STACK_NAME --connection=local
            systemctl enable dirsrv@ldap
      Tags:
        -
         Key: Name
         Value: !Ref AWS::StackName


